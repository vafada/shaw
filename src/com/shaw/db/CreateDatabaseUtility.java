package com.shaw.db;

import java.sql.DriverManager;
import java.sql.Connection;
import java.sql.Statement;

public class CreateDatabaseUtility {
    public static void main(String[] args) throws Exception {
        Class.forName("org.hsqldb.jdbcDriver");
        Connection conn = DriverManager.getConnection("jdbc:hsqldb:data/shaw", // filenames
                "sa", // username
                "");                     // password
        Statement st = conn.createStatement();            // statement objects can be reused with
        // repeated calls to execute but we
        // choose to make a new one each time
        st.executeQuery("CREATE TABLE products (" +
                "   part_number VARCHAR(20) PRIMARY KEY, " +
                "   description VARCHAR, " +
                "   location VARCHAR, " +
                "   quantity INTEGER, " +
                "   pcp DOUBLE, " +
                "   misc VARCHAR, " +
                "   other_number VARCHAR, " +
                "   unit_price DOUBLE, " +
                "   comments VARCHAR)");

        st.executeQuery("CREATE TABLE parts_input (" +
                "   id INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) PRIMARY KEY, " +
                "   customer_number VARCHAR, " +
                "   order_number VARCHAR, " +
                "   allocation_number VARCHAR, " +
                "   payment_term VARCHAR, " +
                "   discount VARCHAR, " +
                "   surcharge VARCHAR, " +
                "   date DATE, " +
                "   invoice_number VARCHAR, " +
                "   date_created DATE)");

        st.executeQuery("CREATE TABLE parts_input_product (" +
                "   parts_input_id INTEGER, " +
                "   part_number VARCHAR, " +
                "   quantity INTEGER, " +
                "   unit_price DOUBLE, " +
                "   extended_amount DOUBLE, " +
                "   FOREIGN KEY (parts_input_id) REFERENCES parts_input(id))");

        st.executeQuery("CREATE TABLE sales (" +
                "   id INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) PRIMARY KEY, " +
                "   invoice_number VARCHAR, " +
                "   purchase_order_number VARCHAR, " +
                "   rest_cert_number VARCHAR, " +
                "   date_issued DATE, " +
                "   place_issued VARCHAR, " +
                "   tin VARCHAR, " +
                "   sold_to VARCHAR, " +
                "   date DATE, " +
                "   address VARCHAR, " +
                "   terms VARCHAR, " +
                "   remarks VARCHAR, " +
                "   received_by VARCHAR, " +
                "   total_cost DOUBLE, " +
                "   total_sales DOUBLE, " +
                "   date_created DATE)");



        st.executeQuery("CREATE TABLE sales_product (" +
                "   sales_id INTEGER, " +
                "   part_number VARCHAR, " +
                "   quantity INTEGER, " +
                "   unit_cost DOUBLE, " +
                "   unit_sales DOUBLE, " +
                "   transaction_date DATE, " +
                "   FOREIGN KEY (sales_id) REFERENCES sales(id))");

        st.execute("SHUTDOWN");
        st.close();
        conn.close();
        System.out.println("Created database");
    }
}
